<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
         http://www.apache.org/licenses/LICENSE-2.0
         
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<web-app id="WebApp_ID" version="2.4"
    xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Apache Isis Webapp</display-name>


    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    
    <context-param>
        <param-name>deploymentType</param-name>
        <!-- 
        <param-value>SERVER_EXPLORATION</param-value>
         -->
        <param-value>SERVER</param-value>
    </context-param>
    
    
   <!--
    -
    -
    - config for archetype only
    -
    -
    -->

    <!-- redirect to /doc/index.html if accessing "/" using web browser -->
    <filter>
        <filter-name>RedirectToDocsFilter</filter-name>
        <filter-class>org.apache.isis.core.webapp.routing.RedirectToDocsFilter</filter-class>
        <init-param>
            <param-name>redirectTo</param-name>
            <param-value>/index.html</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>RedirectToDocsFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>
    
    
    <!--
    -
    -
    - config common to all viewer(s)
    -
    -
    -->
    
    <!-- bootstrap the Isis metamodel and runtime -->
    <listener>
        <listener-class>org.apache.isis.runtimes.dflt.webapp.IsisWebAppBootstrapper</listener-class>
    </listener>

    <!-- which (optional) configuration file(s) to load -->
    <context-param>
        <param-name>isis.viewers</param-name>
        <param-value>html,json,scimpi</param-value>
    </context-param>

    <!-- cache static resources for 1 day -->
    <filter>
        <filter-name>ResourceCachingFilter</filter-name>
        <filter-class>org.apache.isis.core.webapp.content.ResourceCachingFilter</filter-class>
        <init-param>
            <param-name>CacheTime</param-name>
            <param-value>86400</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>ResourceCachingFilter</filter-name>
        <url-pattern>*.js</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResourceCachingFilter</filter-name>
        <url-pattern>*.css</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResourceCachingFilter</filter-name>
        <url-pattern>*.png</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResourceCachingFilter</filter-name>
        <url-pattern>*.jpg</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResourceCachingFilter</filter-name>
        <url-pattern>*.gif</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResourceCachingFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    
    <servlet>
        <servlet-name>Resource</servlet-name>
        <servlet-class>org.apache.isis.core.webapp.content.ResourceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>Resource</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Resource</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Resource</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Resource</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Resource</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>Resource</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    




    <!--
    -
    -
    - config specific to the html-viewer
    -
    -
    -->
    <!-- determine the format of the paths of the links etc that it generates -->
    <context-param>
        <param-name>viewer-html.suffix</param-name>
        <param-value>htmlviewer</param-value>
    </context-param>

    <!-- redirect requests to 'htmlviewer' to the HTML viewer's start page -->
    <filter>
        <filter-name>RedirectFilterForHtml</filter-name>
        <filter-class>org.apache.isis.core.webapp.routing.RedirectFilter</filter-class>
        <init-param>
            <param-name>redirectTo</param-name>
            <param-value>/start.htmlviewer</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>RedirectFilterForHtml</filter-name>
        <url-pattern>/htmlviewer</url-pattern>
    </filter-mapping>

    <!-- authenticate user, and set up an Isis Session -->
    <filter>
        <filter-name>IsisSessionFilterForHtml</filter-name>
        <filter-class>org.apache.isis.runtimes.dflt.webapp.IsisSessionFilter</filter-class>
        <init-param>
            <!-- lookup from cache, or if a logon filter was provided -->
            <param-name>authenticationSessionStrategy</param-name>
            <param-value>org.apache.isis.runtimes.dflt.webapp.auth.AuthenticationSessionStrategyDefault</param-value>
        </init-param>
        <init-param>
            <!-- what to do if no session was found; we indicate access only to a restricted list of paths -->
            <param-name>whenNoSession</param-name>
            <param-value>restricted</param-value>
        </init-param>
        <init-param>
            <!-- the list of paths that are accessible if no session was found -->
            <param-name>restricted</param-name>
            <param-value>/logon.htmlviewer,/register.htmlviewer</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>IsisSessionFilterForHtml</filter-name>
        <servlet-name>HtmlLogin</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>IsisSessionFilterForHtml</filter-name>
        <servlet-name>HtmlDispatcher</servlet-name>
    </filter-mapping>

    <servlet>
        <servlet-name>HtmlLogon</servlet-name>
        <servlet-class>org.apache.isis.viewer.html.servlet.LogonServlet</servlet-class>
        <init-param>
            <param-name>authenticationSessionStrategy</param-name>
            <param-value>org.apache.isis.runtimes.dflt.webapp.auth.AuthenticationSessionStrategyDefault</param-value>
        </init-param>
        <init-param>
            <param-name>startPage</param-name>
            <param-value>start.htmlviewer</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>HtmlLogon</servlet-name>
        <url-pattern>/logon.htmlviewer</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>HtmlDispatcher</servlet-name>
        <servlet-class>org.apache.isis.viewer.html.servlet.ControllerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HtmlDispatcher</servlet-name>
        <url-pattern>*.htmlviewer</url-pattern>
    </servlet-mapping>




    <!--
    -
    -
    - config specific to the scimpi-viewer
    -
    -
    -->
    <servlet>
        <servlet-name>ScimpiDispatcher</servlet-name>
        <servlet-class>org.apache.isis.viewer.scimpi.servlet.DispatcherServlet</servlet-class>
        <init-param>
             <param-name>view</param-name>
             <param-value>login.shtml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ScimpiDispatcher</servlet-name>
        <url-pattern>*.shtml</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ScimpiDispatcher</servlet-name>
        <url-pattern>*.app</url-pattern>
    </servlet-mapping>




    <!--
    -
    -
    - config specific to the json-viewer
    -
    -
    -->
    
    <!-- bootstrap the RestEasy framework -->
    <listener>
        <listener-class>org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
    </listener>

    <!-- used by RestEasy to determine the JAX-RS resources and other related configuration -->
    <context-param>
        <param-name>javax.ws.rs.Application</param-name>
        <param-value>org.apache.isis.viewer.json.viewer.JsonApplication</param-value>
    </context-param>

    <!-- authenticate user, set up an Isis session -->
    <filter>
        <filter-name>IsisSessionFilterForJson</filter-name>
        <filter-class>org.apache.isis.runtimes.dflt.webapp.IsisSessionFilter</filter-class>
        <!-- authentication required for REST -->
        <init-param>
            <param-name>authenticationSessionStrategy</param-name>
            <param-value>org.apache.isis.viewer.json.viewer.authentication.AuthenticationSessionStrategyBasicAuth</param-value>
        </init-param>
        <init-param>
            <!-- what to do if no session was found; we indicate to issue a 401 basic authentication challenge -->
            <param-name>whenNoSession</param-name>
            <param-value>basicAuthChallenge</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <!-- this is mapped to the entire app; however the IsisSessionFilter will "notice" if the session filter has already been
             executed for the request pipeline, and if so will do nothing -->
        <filter-name>IsisSessionFilterForJson</filter-name>
        <servlet-name>JsonDispatcher</servlet-name>
    </filter-mapping>


    <servlet>
        <servlet-name>JsonDispatcher</servlet-name>
        <servlet-class>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>JsonDispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
	
</web-app>
